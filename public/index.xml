<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I am LetHugo</title>
    <link>https://HuChanghong.github.io/</link>
    <description>Recent content on I am LetHugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2019</copyright>
    <lastBuildDate>Sat, 06 Jul 2019 16:53:28 +0800</lastBuildDate>
    
	<atom:link href="https://HuChanghong.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LearnGit</title>
      <link>https://HuChanghong.github.io/2019/07/06/learngit/</link>
      <pubDate>Sat, 06 Jul 2019 16:53:28 +0800</pubDate>
      
      <guid>https://HuChanghong.github.io/2019/07/06/learngit/</guid>
      <description>本文内容是对廖雪峰老师Git教程做的笔记,外加一些自己的学习心得,还抱着学以致用的心态来实践一番
* Git学习笔记 * Git简介 * 安装Git * 创建版本库repository * 把文件添加到版本库 * 1.把文件添加到暂存区 * 2.把文件提交到版本库 * Git bash操作文件及文件夹命令 * 查看Git安装目录 * 时光穿梭机 * 版本退回 * 工作区和暂存区 * 掌握仓库当前的状态 * 查看修改内容 * 撤销修改 * 文件名里有空格和()的情况 * 删除文件 * 远程仓库 * 添加远程库 * 从远程库克隆 * 取消链接并删除本地库 * 分支管理 * 创建与合并分支 * 解决冲突 * 分支管理策略 * Bug分支 * Feature分支 * 多人协作 * rebase * 标签管理 * 创建标签 * 操作标签 * 关联多个远程库 * 自定义Git * 忽略特殊文件 * Windows下创建.</description>
    </item>
    
    <item>
      <title>Algorithms</title>
      <link>https://HuChanghong.github.io/2019/07/02/algorithms/</link>
      <pubDate>Tue, 02 Jul 2019 14:37:30 +0800</pubDate>
      
      <guid>https://HuChanghong.github.io/2019/07/02/algorithms/</guid>
      <description>[TOC]
Algorithms In this notebook, you will learn the following:
 Big O Notation Recursion  Fibonacci Binary Search   Array, List, String, Set, Dictionary List Dictionary 这些都可以看做是一个数据的容器，他们存储数据的方式有不同。 对于数据，我们常用的操作有，插入、删除、查找 等。 不同的存储方式会导致在做这些操作的时候，时间上会有差别。这就是数据结构。
那么什么是算法？如何评估算法？
算法就是解决问题
 问题是什么 Problem 我们有什么 Input 我们想要得到什么 Output 尝试最简单的方法 Simple Solution 看看如何改进 Develop Incrementally  Algorithm Analysis
   时间复杂度 表示     constent O(1)   logarithmic O(log(n))   linear O(n)   log linear O(n*log(n))   quadratic O(n^2)   cubic O(n^3)   exponential O(2^n)    Big O Notation 大O表示法</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://HuChanghong.github.io/2019/06/24/first/</link>
      <pubDate>Mon, 24 Jun 2019 22:05:13 +0800</pubDate>
      
      <guid>https://HuChanghong.github.io/2019/06/24/first/</guid>
      <description>一、Markdown 是什么？  二、印象笔记里 Markdown 有什么特点？ 三、如何创建 Markdown 笔记？ 四、印象笔记 Markdown 笔记支持哪些语法？ 设置分级标题  一级标题
 二级标题 三级标题  四级标题 五级标题  六级标题   加粗文本 斜体 下划线 删除线 添加分隔线 引用文本 添加符号列表或者数字列表 添加待办事项 插入链接 插入图片 插入表格 插入图表 插入行内代码或代码块 插入数学公式 插入流程图 插入时序图 插入甘特图 设置目录 五、印象笔记 Markdown 支持什么快捷键？ &amp;gt;本文内容来自印象笔记官网,版权归印象笔记官方所有.原文链接:印象笔记Markdown入门指南
此处仅对印象笔记Markdown的用法做一些粗浅的学习,本文的格式完全采用GFM标准.
一、Markdown 是什么？  Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。
    印象笔记 Markdown 支持 CommonMark 和 GFM (GitHub Flavored Markdown) 标准。</description>
    </item>
    
  </channel>
</rss>